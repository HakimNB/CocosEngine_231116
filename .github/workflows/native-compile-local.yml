name: <Native> Compile Local Windows

on: push

jobs:
  compile_mac_arm64:
    name: "MacOS arm64"
    runs-on: self-hosted
    steps:
      - name: Download Source
        shell: bash
        run: |
          set -x
          echo `pwd`
          if [[ ! -f "${GITHUB_WORKSPACE}/tsconfig.json" ]]; then
            rsync -r /Users/pt/Github/engine/* ${GITHUB_WORKSPACE}
          fi
          echo `pwd`
          retry git fetch --all
          git checkout -f $GITHUB_SHA
          cd native
          EXT_VERSION=`grep version external-config.json  |awk -F'"' '{print $4}'`
          retry git -C external fetch --all
          git -C external checkout -f $EXT_VERSION
      # - name: Generate bindings
      #   run: |
      #     python -m pip install PyYAML==5.4.1 Cheetah3
      #     python ./native/tools/tojs/genbindings.py
      #     rm ./native/tools/tojs/userconf.ini
      - name: Compile
        env:
          COCOS_ENGINE_DEV: 1
        run: |
          set -x
          echo `pwd`
          NUM_OF_CORES=`getconf _NPROCESSORS_ONLN`
          COCOS2DX_ROOT=$GITHUB_WORKSPACE/native
          echo "Compiling MacOSX ... "
          cd  $GITHUB_WORKSPACE/templates/mac
          rm -rf build-mac
          mkdir -p build-mac/proj
          touch build-mac/proj/cfg.cmake
          echo "set(CC_USE_VULKAN OFF)" >> build-mac/proj/cfg.cmake
          echo "set(CC_USE_GLES2 OFF)" >> build-mac/proj/cfg.cmake
          echo "set(CC_USE_GLES3 OFF)" >> build-mac/proj/cfg.cmake
          echo "set(CC_USE_METAL ON)" >> build-mac/proj/cfg.cmake
          echo "set(USE_WEBSOCKET_SERVER OFF)" >> build-mac/proj/cfg.cmake
          echo "set(CMAKE_CXX_STANDARD_REQUIRED ON)" >> build-mac/proj/cfg.cmake
          mkdir build-mac/assets

          RES_DIR=$GITHUB_WORKSPACE/templates/mac/build-mac
          cd build-mac
          cmake ../ -GXcode -DCMAKE_OSX_ARCHITECTURES=arm64 -DRES_DIR=$RES_DIR -DCOCOS_X_PATH=$COCOS2DX_ROOT
          set +e
          cmake --build . --config Release -- -quiet -jobs $NUM_OF_CORES -arch arm64
          retcode=$?
          set -e
          if [ $retcode -ne 0 ]; then
              echo "-----------------------------------------------------------------------------------------------"
              echo "------------------------------------ recompile without `-quiet` -------------------------------"
              echo "-----------------------------------------------------------------------------------------------"
              cmake --build . --config Release -- -jobs $NUM_OF_CORES -arch arm64
          fi
          echo "Compile MacOSX ARM64 Release Done!"
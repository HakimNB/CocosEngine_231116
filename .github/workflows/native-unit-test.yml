name: <Native> Run Tests

on: [pull_request]

jobs:
  unit-test-with-cmake:
    name: "Run on windows"
    runs-on: windows-latest
    defaults:
      run:
        working-directory: ${{github.workspace}}/native
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: "3.x"

      - name: Downlad external libraties
        run: |
          npm install
          npm install gulp -g
          node ./utils/download-deps.js

      - name: Generate bindings
        shell: bash
        run: |
          python -m pip install PyYAML==5.4.1 Cheetah3
          python ./tools/tojs/genbindings.py

      - name: Run Unit Tests
        shell: bash
        run: |
          cmake -B tests/unit-test/build -S tests/unit-test
          cmake --build tests/unit-test/build --config Release
          ./tests/unit-test/build/src/Release/CocosTest.exe
      
      - name: Run Sebind Tests
        shell: bash
        run: |
          cp -r ../templates/windows tests/sebind-tests/win64
          cd tests/sebind-tests
          mkdir -p proj
          cp cfg.cmake proj
          cmake -B proj -S win64 -DRES_DIR=${GITHUB_WORKSPACE}/native/tests/sebind-tests/ -DCOCOS_X_PATH=${GITHUB_WORKSPACE}/native -DAPP_NAME=sebind
          cmake --build proj
          cd proj/Debug
          ./sebind.exe || true
          if [[ -f "result.txt" ]]; 
          then
            echo "success!"
          else
            echo "Run sebind-tests fail!" > /dev/stderr
          fi
      #### TODO(PatriceJiang): model split
      # - name: Run Module Tests
      #   shell: bash
      #   run: |
      #     cd tests/module-tests 
      #     bash run-test-windows.sh
